// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_NGio
#include <NGio.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_1f137c4d6a266f48_24_boot,"NGio","boot",0x50009aa1,"NGio.boot","NGio.hx",24,0xcd75a7bf)

void NGio_obj::__construct() { }

Dynamic NGio_obj::__CreateEmpty() { return new NGio_obj; }

void *NGio_obj::_hx_vtable = 0;

Dynamic NGio_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< NGio_obj > _hx_result = new NGio_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NGio_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0817d683;
}

bool NGio_obj::isLoggedIn;


NGio_obj::NGio_obj()
{
}

bool NGio_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"isLoggedIn") ) { outValue = ( isLoggedIn ); return true; }
	}
	return false;
}

bool NGio_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"isLoggedIn") ) { isLoggedIn=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *NGio_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo NGio_obj_sStaticStorageInfo[] = {
	{::hx::fsBool,(void *) &NGio_obj::isLoggedIn,HX_("isLoggedIn",11,4d,dc,63)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void NGio_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NGio_obj::isLoggedIn,"isLoggedIn");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NGio_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NGio_obj::isLoggedIn,"isLoggedIn");
};

#endif

::hx::Class NGio_obj::__mClass;

static ::String NGio_obj_sStaticFields[] = {
	HX_("isLoggedIn",11,4d,dc,63),
	::String(null())
};

void NGio_obj::__register()
{
	NGio_obj _hx_dummy;
	NGio_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("NGio",5f,e0,c4,33);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NGio_obj::__GetStatic;
	__mClass->mSetStaticField = &NGio_obj::__SetStatic;
	__mClass->mMarkFunc = NGio_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(NGio_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< NGio_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NGio_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NGio_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NGio_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NGio_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_1f137c4d6a266f48_24_boot)
HXDLIN(  24)		isLoggedIn = false;
            	}
}

