// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_io_newgrounds_Call
#include <io/newgrounds/Call.h>
#endif
#ifndef INCLUDED_io_newgrounds_ICallable
#include <io/newgrounds/ICallable.h>
#endif
#ifndef INCLUDED_io_newgrounds_NGLite
#include <io/newgrounds/NGLite.h>
#endif
#ifndef INCLUDED_io_newgrounds_components_Component
#include <io/newgrounds/components/Component.h>
#endif
#ifndef INCLUDED_io_newgrounds_components_ComponentList
#include <io/newgrounds/components/ComponentList.h>
#endif
#ifndef INCLUDED_io_newgrounds_components_MedalComponent
#include <io/newgrounds/components/MedalComponent.h>
#endif
#ifndef INCLUDED_io_newgrounds_objects_Medal
#include <io/newgrounds/objects/Medal.h>
#endif
#ifndef INCLUDED_io_newgrounds_objects_Object
#include <io/newgrounds/objects/Object.h>
#endif
#ifndef INCLUDED_io_newgrounds_utils_Dispatcher
#include <io/newgrounds/utils/Dispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_86dc0cd60a499658_42_new,"io.newgrounds.objects.Medal","new",0xa44b2a75,"io.newgrounds.objects.Medal.new","io/newgrounds/objects/Medal.hx",42,0x7fbeb13c)
HX_LOCAL_STACK_FRAME(_hx_pos_86dc0cd60a499658_50_parse,"io.newgrounds.objects.Medal","parse",0xd1675988,"io.newgrounds.objects.Medal.parse","io/newgrounds/objects/Medal.hx",50,0x7fbeb13c)
HX_LOCAL_STACK_FRAME(_hx_pos_86dc0cd60a499658_60_sendUnlock,"io.newgrounds.objects.Medal","sendUnlock",0x4d0e0cb7,"io.newgrounds.objects.Medal.sendUnlock","io/newgrounds/objects/Medal.hx",60,0x7fbeb13c)
HX_LOCAL_STACK_FRAME(_hx_pos_86dc0cd60a499658_76_onUnlockResponse,"io.newgrounds.objects.Medal","onUnlockResponse",0x7417bbaf,"io.newgrounds.objects.Medal.onUnlockResponse","io/newgrounds/objects/Medal.hx",76,0x7fbeb13c)
namespace io{
namespace newgrounds{
namespace objects{

void Medal_obj::__construct( ::io::newgrounds::NGLite core, ::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_86dc0cd60a499658_42_new)
HXLINE(  44)		this->onUnlock =  ::io::newgrounds::utils::Dispatcher_obj::__alloc( HX_CTX );
HXLINE(  46)		super::__construct(core,data);
            	}

Dynamic Medal_obj::__CreateEmpty() { return new Medal_obj; }

void *Medal_obj::_hx_vtable = 0;

Dynamic Medal_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Medal_obj > _hx_result = new Medal_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Medal_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x596f3161) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x596f3161;
	} else {
		return inClassId==(int)0x7564f595;
	}
}

void Medal_obj::parse( ::Dynamic _tmp_data){
            	HX_STACKFRAME(&_hx_pos_86dc0cd60a499658_50_parse)
HXLINE(  52)		 ::Dynamic data = _tmp_data;
HXDLIN(  52)		bool wasLocked;
HXDLIN(  52)		if (::hx::IsNotNull( this->_data )) {
HXLINE(  52)			wasLocked = !(( (bool)(this->_data->__Field(HX_("unlocked",23,34,0e,5c),::hx::paccDynamic)) ));
            		}
            		else {
HXLINE(  52)			wasLocked = true;
            		}
HXLINE(  54)		this->super::parse(data);
HXLINE(  56)		bool _hx_tmp;
HXDLIN(  56)		if (wasLocked) {
HXLINE(  56)			_hx_tmp = ( (bool)(this->_data->__Field(HX_("unlocked",23,34,0e,5c),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  56)			_hx_tmp = false;
            		}
HXDLIN(  56)		if (_hx_tmp) {
HXLINE(  57)			this->onUnlock->dispatch();
            		}
            	}


void Medal_obj::sendUnlock(){
            	HX_STACKFRAME(&_hx_pos_86dc0cd60a499658_60_sendUnlock)
HXLINE(  62)		if (::hx::IsNull( this->_core->sessionId )) {
HXLINE(  64)			this->_data->__SetField(HX_("unlocked",23,34,0e,5c),true,::hx::paccDynamic);
HXLINE(  65)			this->onUnlock->dispatch();
            		}
HXLINE(  69)		this->_core->calls->medal->unlock(( (int)(this->_data->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)) ))->addDataHandler(this->onUnlockResponse_dyn())->send();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Medal_obj,sendUnlock,(void))

void Medal_obj::onUnlockResponse( ::Dynamic response){
            	HX_STACKFRAME(&_hx_pos_86dc0cd60a499658_76_onUnlockResponse)
HXDLIN(  76)		bool _hx_tmp;
HXDLIN(  76)		if (( (bool)(response->__Field(HX_("success",c3,25,4e,b8),::hx::paccDynamic)) )) {
HXDLIN(  76)			_hx_tmp = ( (bool)( ::Dynamic( ::Dynamic(response->__Field(HX_("result",dd,68,84,08),::hx::paccDynamic))->__Field(HX_("data",2a,56,63,42),::hx::paccDynamic))->__Field(HX_("success",c3,25,4e,b8),::hx::paccDynamic)) );
            		}
            		else {
HXDLIN(  76)			_hx_tmp = false;
            		}
HXDLIN(  76)		if (_hx_tmp) {
HXLINE(  78)			this->parse( ::Dynamic( ::Dynamic( ::Dynamic(response->__Field(HX_("result",dd,68,84,08),::hx::paccDynamic))->__Field(HX_("data",2a,56,63,42),::hx::paccDynamic))->__Field(HX_("medal",f7,fd,bb,05),::hx::paccDynamic)));
HXLINE(  81)			if (!(( (bool)(this->_data->__Field(HX_("unlocked",23,34,0e,5c),::hx::paccDynamic)) ))) {
HXLINE(  83)				this->_data->__SetField(HX_("unlocked",23,34,0e,5c),true,::hx::paccDynamic);
HXLINE(  84)				this->onUnlock->dispatch();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Medal_obj,onUnlockResponse,(void))


::hx::ObjectPtr< Medal_obj > Medal_obj::__new( ::io::newgrounds::NGLite core, ::Dynamic data) {
	::hx::ObjectPtr< Medal_obj > __this = new Medal_obj();
	__this->__construct(core,data);
	return __this;
}

::hx::ObjectPtr< Medal_obj > Medal_obj::__alloc(::hx::Ctx *_hx_ctx, ::io::newgrounds::NGLite core, ::Dynamic data) {
	Medal_obj *__this = (Medal_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Medal_obj), true, "io.newgrounds.objects.Medal"));
	*(void **)__this = Medal_obj::_hx_vtable;
	__this->__construct(core,data);
	return __this;
}

Medal_obj::Medal_obj()
{
}

void Medal_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Medal);
	HX_MARK_MEMBER_NAME(onUnlock,"onUnlock");
	 ::io::newgrounds::objects::Object_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Medal_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(onUnlock,"onUnlock");
	 ::io::newgrounds::objects::Object_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Medal_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"parse") ) { return ::hx::Val( parse_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onUnlock") ) { return ::hx::Val( onUnlock ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"sendUnlock") ) { return ::hx::Val( sendUnlock_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"onUnlockResponse") ) { return ::hx::Val( onUnlockResponse_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Medal_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"onUnlock") ) { onUnlock=inValue.Cast<  ::io::newgrounds::utils::Dispatcher >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Medal_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("onUnlock",43,99,39,45));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Medal_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::io::newgrounds::utils::Dispatcher */ ,(int)offsetof(Medal_obj,onUnlock),HX_("onUnlock",43,99,39,45)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Medal_obj_sStaticStorageInfo = 0;
#endif

static ::String Medal_obj_sMemberFields[] = {
	HX_("onUnlock",43,99,39,45),
	HX_("parse",33,90,55,bd),
	HX_("sendUnlock",2c,ca,e2,06),
	HX_("onUnlockResponse",e4,7e,e7,9e),
	::String(null()) };

::hx::Class Medal_obj::__mClass;

void Medal_obj::__register()
{
	Medal_obj _hx_dummy;
	Medal_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("io.newgrounds.objects.Medal",03,cc,85,e6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Medal_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Medal_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Medal_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Medal_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace io
} // end namespace newgrounds
} // end namespace objects
